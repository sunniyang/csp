// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: csp.proto

package com.suomee.csp.lib.proto;

public final class Csp {
  private Csp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CspRequestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 cspId = 1 [default = 0];
    /**
     * <code>required int64 cspId = 1 [default = 0];</code>
     */
    boolean hasCspId();
    /**
     * <code>required int64 cspId = 1 [default = 0];</code>
     */
    long getCspId();

    // required string srvName = 2;
    /**
     * <code>required string srvName = 2;</code>
     */
    boolean hasSrvName();
    /**
     * <code>required string srvName = 2;</code>
     */
    java.lang.String getSrvName();
    /**
     * <code>required string srvName = 2;</code>
     */
    com.google.protobuf.ByteString
        getSrvNameBytes();

    // required string funName = 3;
    /**
     * <code>required string funName = 3;</code>
     */
    boolean hasFunName();
    /**
     * <code>required string funName = 3;</code>
     */
    java.lang.String getFunName();
    /**
     * <code>required string funName = 3;</code>
     */
    com.google.protobuf.ByteString
        getFunNameBytes();

    // optional int64 time = 4;
    /**
     * <code>optional int64 time = 4;</code>
     */
    boolean hasTime();
    /**
     * <code>optional int64 time = 4;</code>
     */
    long getTime();

    // optional int32 timeouts = 5;
    /**
     * <code>optional int32 timeouts = 5;</code>
     */
    boolean hasTimeouts();
    /**
     * <code>optional int32 timeouts = 5;</code>
     */
    int getTimeouts();

    // optional bytes data = 6;
    /**
     * <code>optional bytes data = 6;</code>
     */
    boolean hasData();
    /**
     * <code>optional bytes data = 6;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code com.suomee.csp.lib.proto.CspRequest}
   */
  public static final class CspRequest extends
      com.google.protobuf.GeneratedMessage
      implements CspRequestOrBuilder {
    // Use CspRequest.newBuilder() to construct.
    private CspRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CspRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CspRequest defaultInstance;
    public static CspRequest getDefaultInstance() {
      return defaultInstance;
    }

    public CspRequest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CspRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      //int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cspId_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              srvName_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              funName_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              time_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              timeouts_ = input.readInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.suomee.csp.lib.proto.Csp.internal_static_com_suomee_csp_lib_proto_CspRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.suomee.csp.lib.proto.Csp.internal_static_com_suomee_csp_lib_proto_CspRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.suomee.csp.lib.proto.Csp.CspRequest.class, com.suomee.csp.lib.proto.Csp.CspRequest.Builder.class);
    }

    public static com.google.protobuf.Parser<CspRequest> PARSER =
        new com.google.protobuf.AbstractParser<CspRequest>() {
      public CspRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CspRequest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CspRequest> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 cspId = 1 [default = 0];
    public static final int CSPID_FIELD_NUMBER = 1;
    private long cspId_;
    /**
     * <code>required int64 cspId = 1 [default = 0];</code>
     */
    public boolean hasCspId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 cspId = 1 [default = 0];</code>
     */
    public long getCspId() {
      return cspId_;
    }

    // required string srvName = 2;
    public static final int SRVNAME_FIELD_NUMBER = 2;
    private java.lang.Object srvName_;
    /**
     * <code>required string srvName = 2;</code>
     */
    public boolean hasSrvName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string srvName = 2;</code>
     */
    public java.lang.String getSrvName() {
      java.lang.Object ref = srvName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          srvName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string srvName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSrvNameBytes() {
      java.lang.Object ref = srvName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        srvName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string funName = 3;
    public static final int FUNNAME_FIELD_NUMBER = 3;
    private java.lang.Object funName_;
    /**
     * <code>required string funName = 3;</code>
     */
    public boolean hasFunName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string funName = 3;</code>
     */
    public java.lang.String getFunName() {
      java.lang.Object ref = funName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          funName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string funName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFunNameBytes() {
      java.lang.Object ref = funName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        funName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 time = 4;
    public static final int TIME_FIELD_NUMBER = 4;
    private long time_;
    /**
     * <code>optional int64 time = 4;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 time = 4;</code>
     */
    public long getTime() {
      return time_;
    }

    // optional int32 timeouts = 5;
    public static final int TIMEOUTS_FIELD_NUMBER = 5;
    private int timeouts_;
    /**
     * <code>optional int32 timeouts = 5;</code>
     */
    public boolean hasTimeouts() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 timeouts = 5;</code>
     */
    public int getTimeouts() {
      return timeouts_;
    }

    // optional bytes data = 6;
    public static final int DATA_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 6;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bytes data = 6;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private void initFields() {
      cspId_ = 0L;
      srvName_ = "";
      funName_ = "";
      time_ = 0L;
      timeouts_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCspId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSrvName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFunName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, cspId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSrvNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getFunNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, time_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, timeouts_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, data_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, cspId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSrvNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getFunNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, time_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, timeouts_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.suomee.csp.lib.proto.Csp.CspRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.suomee.csp.lib.proto.Csp.CspRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.suomee.csp.lib.proto.Csp.CspRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.suomee.csp.lib.proto.Csp.CspRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.suomee.csp.lib.proto.Csp.CspRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.suomee.csp.lib.proto.Csp.CspRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.suomee.csp.lib.proto.Csp.CspRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.suomee.csp.lib.proto.Csp.CspRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.suomee.csp.lib.proto.Csp.CspRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.suomee.csp.lib.proto.Csp.CspRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.suomee.csp.lib.proto.Csp.CspRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.suomee.csp.lib.proto.CspRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.suomee.csp.lib.proto.Csp.CspRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.suomee.csp.lib.proto.Csp.internal_static_com_suomee_csp_lib_proto_CspRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.suomee.csp.lib.proto.Csp.internal_static_com_suomee_csp_lib_proto_CspRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.suomee.csp.lib.proto.Csp.CspRequest.class, com.suomee.csp.lib.proto.Csp.CspRequest.Builder.class);
      }

      // Construct using com.suomee.csp.lib.proto.Csp.CspRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cspId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        srvName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        funName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        timeouts_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.suomee.csp.lib.proto.Csp.internal_static_com_suomee_csp_lib_proto_CspRequest_descriptor;
      }

      public com.suomee.csp.lib.proto.Csp.CspRequest getDefaultInstanceForType() {
        return com.suomee.csp.lib.proto.Csp.CspRequest.getDefaultInstance();
      }

      public com.suomee.csp.lib.proto.Csp.CspRequest build() {
        com.suomee.csp.lib.proto.Csp.CspRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.suomee.csp.lib.proto.Csp.CspRequest buildPartial() {
        com.suomee.csp.lib.proto.Csp.CspRequest result = new com.suomee.csp.lib.proto.Csp.CspRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cspId_ = cspId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.srvName_ = srvName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.funName_ = funName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.timeouts_ = timeouts_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.suomee.csp.lib.proto.Csp.CspRequest) {
          return mergeFrom((com.suomee.csp.lib.proto.Csp.CspRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.suomee.csp.lib.proto.Csp.CspRequest other) {
        if (other == com.suomee.csp.lib.proto.Csp.CspRequest.getDefaultInstance()) return this;
        if (other.hasCspId()) {
          setCspId(other.getCspId());
        }
        if (other.hasSrvName()) {
          bitField0_ |= 0x00000002;
          srvName_ = other.srvName_;
          onChanged();
        }
        if (other.hasFunName()) {
          bitField0_ |= 0x00000004;
          funName_ = other.funName_;
          onChanged();
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasTimeouts()) {
          setTimeouts(other.getTimeouts());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCspId()) {
          
          return false;
        }
        if (!hasSrvName()) {
          
          return false;
        }
        if (!hasFunName()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.suomee.csp.lib.proto.Csp.CspRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.suomee.csp.lib.proto.Csp.CspRequest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 cspId = 1 [default = 0];
      private long cspId_ ;
      /**
       * <code>required int64 cspId = 1 [default = 0];</code>
       */
      public boolean hasCspId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 cspId = 1 [default = 0];</code>
       */
      public long getCspId() {
        return cspId_;
      }
      /**
       * <code>required int64 cspId = 1 [default = 0];</code>
       */
      public Builder setCspId(long value) {
        bitField0_ |= 0x00000001;
        cspId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 cspId = 1 [default = 0];</code>
       */
      public Builder clearCspId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cspId_ = 0L;
        onChanged();
        return this;
      }

      // required string srvName = 2;
      private java.lang.Object srvName_ = "";
      /**
       * <code>required string srvName = 2;</code>
       */
      public boolean hasSrvName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string srvName = 2;</code>
       */
      public java.lang.String getSrvName() {
        java.lang.Object ref = srvName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          srvName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string srvName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSrvNameBytes() {
        java.lang.Object ref = srvName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          srvName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string srvName = 2;</code>
       */
      public Builder setSrvName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        srvName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string srvName = 2;</code>
       */
      public Builder clearSrvName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        srvName_ = getDefaultInstance().getSrvName();
        onChanged();
        return this;
      }
      /**
       * <code>required string srvName = 2;</code>
       */
      public Builder setSrvNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        srvName_ = value;
        onChanged();
        return this;
      }

      // required string funName = 3;
      private java.lang.Object funName_ = "";
      /**
       * <code>required string funName = 3;</code>
       */
      public boolean hasFunName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string funName = 3;</code>
       */
      public java.lang.String getFunName() {
        java.lang.Object ref = funName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          funName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string funName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFunNameBytes() {
        java.lang.Object ref = funName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          funName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string funName = 3;</code>
       */
      public Builder setFunName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        funName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string funName = 3;</code>
       */
      public Builder clearFunName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        funName_ = getDefaultInstance().getFunName();
        onChanged();
        return this;
      }
      /**
       * <code>required string funName = 3;</code>
       */
      public Builder setFunNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        funName_ = value;
        onChanged();
        return this;
      }

      // optional int64 time = 4;
      private long time_ ;
      /**
       * <code>optional int64 time = 4;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 time = 4;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>optional int64 time = 4;</code>
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000008;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 time = 4;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        time_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 timeouts = 5;
      private int timeouts_ ;
      /**
       * <code>optional int32 timeouts = 5;</code>
       */
      public boolean hasTimeouts() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 timeouts = 5;</code>
       */
      public int getTimeouts() {
        return timeouts_;
      }
      /**
       * <code>optional int32 timeouts = 5;</code>
       */
      public Builder setTimeouts(int value) {
        bitField0_ |= 0x00000010;
        timeouts_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 timeouts = 5;</code>
       */
      public Builder clearTimeouts() {
        bitField0_ = (bitField0_ & ~0x00000010);
        timeouts_ = 0;
        onChanged();
        return this;
      }

      // optional bytes data = 6;
      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes data = 6;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bytes data = 6;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>optional bytes data = 6;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes data = 6;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000020);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.suomee.csp.lib.proto.CspRequest)
    }

    static {
      defaultInstance = new CspRequest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.suomee.csp.lib.proto.CspRequest)
  }

  public interface CspResponseOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 cspId = 1 [default = 0];
    /**
     * <code>required int64 cspId = 1 [default = 0];</code>
     */
    boolean hasCspId();
    /**
     * <code>required int64 cspId = 1 [default = 0];</code>
     */
    long getCspId();

    // required string srvName = 2;
    /**
     * <code>required string srvName = 2;</code>
     */
    boolean hasSrvName();
    /**
     * <code>required string srvName = 2;</code>
     */
    java.lang.String getSrvName();
    /**
     * <code>required string srvName = 2;</code>
     */
    com.google.protobuf.ByteString
        getSrvNameBytes();

    // required string funName = 3;
    /**
     * <code>required string funName = 3;</code>
     */
    boolean hasFunName();
    /**
     * <code>required string funName = 3;</code>
     */
    java.lang.String getFunName();
    /**
     * <code>required string funName = 3;</code>
     */
    com.google.protobuf.ByteString
        getFunNameBytes();

    // optional int64 reqTime = 4;
    /**
     * <code>optional int64 reqTime = 4;</code>
     */
    boolean hasReqTime();
    /**
     * <code>optional int64 reqTime = 4;</code>
     */
    long getReqTime();

    // optional int64 rspTime = 5;
    /**
     * <code>optional int64 rspTime = 5;</code>
     */
    boolean hasRspTime();
    /**
     * <code>optional int64 rspTime = 5;</code>
     */
    long getRspTime();

    // optional int32 code = 6;
    /**
     * <code>optional int32 code = 6;</code>
     */
    boolean hasCode();
    /**
     * <code>optional int32 code = 6;</code>
     */
    int getCode();

    // optional bytes data = 7;
    /**
     * <code>optional bytes data = 7;</code>
     */
    boolean hasData();
    /**
     * <code>optional bytes data = 7;</code>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code com.suomee.csp.lib.proto.CspResponse}
   */
  public static final class CspResponse extends
      com.google.protobuf.GeneratedMessage
      implements CspResponseOrBuilder {
    // Use CspResponse.newBuilder() to construct.
    private CspResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CspResponse(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CspResponse defaultInstance;
    public static CspResponse getDefaultInstance() {
      return defaultInstance;
    }

    public CspResponse getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CspResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      //int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cspId_ = input.readInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              srvName_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              funName_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              reqTime_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              rspTime_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              code_ = input.readInt32();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.suomee.csp.lib.proto.Csp.internal_static_com_suomee_csp_lib_proto_CspResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.suomee.csp.lib.proto.Csp.internal_static_com_suomee_csp_lib_proto_CspResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.suomee.csp.lib.proto.Csp.CspResponse.class, com.suomee.csp.lib.proto.Csp.CspResponse.Builder.class);
    }

    public static com.google.protobuf.Parser<CspResponse> PARSER =
        new com.google.protobuf.AbstractParser<CspResponse>() {
      public CspResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CspResponse(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CspResponse> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 cspId = 1 [default = 0];
    public static final int CSPID_FIELD_NUMBER = 1;
    private long cspId_;
    /**
     * <code>required int64 cspId = 1 [default = 0];</code>
     */
    public boolean hasCspId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 cspId = 1 [default = 0];</code>
     */
    public long getCspId() {
      return cspId_;
    }

    // required string srvName = 2;
    public static final int SRVNAME_FIELD_NUMBER = 2;
    private java.lang.Object srvName_;
    /**
     * <code>required string srvName = 2;</code>
     */
    public boolean hasSrvName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string srvName = 2;</code>
     */
    public java.lang.String getSrvName() {
      java.lang.Object ref = srvName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          srvName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string srvName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSrvNameBytes() {
      java.lang.Object ref = srvName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        srvName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string funName = 3;
    public static final int FUNNAME_FIELD_NUMBER = 3;
    private java.lang.Object funName_;
    /**
     * <code>required string funName = 3;</code>
     */
    public boolean hasFunName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string funName = 3;</code>
     */
    public java.lang.String getFunName() {
      java.lang.Object ref = funName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          funName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string funName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFunNameBytes() {
      java.lang.Object ref = funName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        funName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 reqTime = 4;
    public static final int REQTIME_FIELD_NUMBER = 4;
    private long reqTime_;
    /**
     * <code>optional int64 reqTime = 4;</code>
     */
    public boolean hasReqTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int64 reqTime = 4;</code>
     */
    public long getReqTime() {
      return reqTime_;
    }

    // optional int64 rspTime = 5;
    public static final int RSPTIME_FIELD_NUMBER = 5;
    private long rspTime_;
    /**
     * <code>optional int64 rspTime = 5;</code>
     */
    public boolean hasRspTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int64 rspTime = 5;</code>
     */
    public long getRspTime() {
      return rspTime_;
    }

    // optional int32 code = 6;
    public static final int CODE_FIELD_NUMBER = 6;
    private int code_;
    /**
     * <code>optional int32 code = 6;</code>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 code = 6;</code>
     */
    public int getCode() {
      return code_;
    }

    // optional bytes data = 7;
    public static final int DATA_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>optional bytes data = 7;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bytes data = 7;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private void initFields() {
      cspId_ = 0L;
      srvName_ = "";
      funName_ = "";
      reqTime_ = 0L;
      rspTime_ = 0L;
      code_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasCspId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSrvName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFunName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, cspId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSrvNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getFunNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, reqTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, rspTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, code_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, data_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, cspId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSrvNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getFunNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, reqTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, rspTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, code_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.suomee.csp.lib.proto.Csp.CspResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.suomee.csp.lib.proto.Csp.CspResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.suomee.csp.lib.proto.Csp.CspResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.suomee.csp.lib.proto.Csp.CspResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.suomee.csp.lib.proto.Csp.CspResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.suomee.csp.lib.proto.Csp.CspResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.suomee.csp.lib.proto.Csp.CspResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.suomee.csp.lib.proto.Csp.CspResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.suomee.csp.lib.proto.Csp.CspResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.suomee.csp.lib.proto.Csp.CspResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.suomee.csp.lib.proto.Csp.CspResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.suomee.csp.lib.proto.CspResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.suomee.csp.lib.proto.Csp.CspResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.suomee.csp.lib.proto.Csp.internal_static_com_suomee_csp_lib_proto_CspResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.suomee.csp.lib.proto.Csp.internal_static_com_suomee_csp_lib_proto_CspResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.suomee.csp.lib.proto.Csp.CspResponse.class, com.suomee.csp.lib.proto.Csp.CspResponse.Builder.class);
      }

      // Construct using com.suomee.csp.lib.proto.Csp.CspResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cspId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        srvName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        funName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        reqTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        rspTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.suomee.csp.lib.proto.Csp.internal_static_com_suomee_csp_lib_proto_CspResponse_descriptor;
      }

      public com.suomee.csp.lib.proto.Csp.CspResponse getDefaultInstanceForType() {
        return com.suomee.csp.lib.proto.Csp.CspResponse.getDefaultInstance();
      }

      public com.suomee.csp.lib.proto.Csp.CspResponse build() {
        com.suomee.csp.lib.proto.Csp.CspResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.suomee.csp.lib.proto.Csp.CspResponse buildPartial() {
        com.suomee.csp.lib.proto.Csp.CspResponse result = new com.suomee.csp.lib.proto.Csp.CspResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cspId_ = cspId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.srvName_ = srvName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.funName_ = funName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.reqTime_ = reqTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rspTime_ = rspTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.code_ = code_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.suomee.csp.lib.proto.Csp.CspResponse) {
          return mergeFrom((com.suomee.csp.lib.proto.Csp.CspResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.suomee.csp.lib.proto.Csp.CspResponse other) {
        if (other == com.suomee.csp.lib.proto.Csp.CspResponse.getDefaultInstance()) return this;
        if (other.hasCspId()) {
          setCspId(other.getCspId());
        }
        if (other.hasSrvName()) {
          bitField0_ |= 0x00000002;
          srvName_ = other.srvName_;
          onChanged();
        }
        if (other.hasFunName()) {
          bitField0_ |= 0x00000004;
          funName_ = other.funName_;
          onChanged();
        }
        if (other.hasReqTime()) {
          setReqTime(other.getReqTime());
        }
        if (other.hasRspTime()) {
          setRspTime(other.getRspTime());
        }
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCspId()) {
          
          return false;
        }
        if (!hasSrvName()) {
          
          return false;
        }
        if (!hasFunName()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.suomee.csp.lib.proto.Csp.CspResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.suomee.csp.lib.proto.Csp.CspResponse) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 cspId = 1 [default = 0];
      private long cspId_ ;
      /**
       * <code>required int64 cspId = 1 [default = 0];</code>
       */
      public boolean hasCspId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 cspId = 1 [default = 0];</code>
       */
      public long getCspId() {
        return cspId_;
      }
      /**
       * <code>required int64 cspId = 1 [default = 0];</code>
       */
      public Builder setCspId(long value) {
        bitField0_ |= 0x00000001;
        cspId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 cspId = 1 [default = 0];</code>
       */
      public Builder clearCspId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cspId_ = 0L;
        onChanged();
        return this;
      }

      // required string srvName = 2;
      private java.lang.Object srvName_ = "";
      /**
       * <code>required string srvName = 2;</code>
       */
      public boolean hasSrvName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string srvName = 2;</code>
       */
      public java.lang.String getSrvName() {
        java.lang.Object ref = srvName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          srvName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string srvName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSrvNameBytes() {
        java.lang.Object ref = srvName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          srvName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string srvName = 2;</code>
       */
      public Builder setSrvName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        srvName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string srvName = 2;</code>
       */
      public Builder clearSrvName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        srvName_ = getDefaultInstance().getSrvName();
        onChanged();
        return this;
      }
      /**
       * <code>required string srvName = 2;</code>
       */
      public Builder setSrvNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        srvName_ = value;
        onChanged();
        return this;
      }

      // required string funName = 3;
      private java.lang.Object funName_ = "";
      /**
       * <code>required string funName = 3;</code>
       */
      public boolean hasFunName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string funName = 3;</code>
       */
      public java.lang.String getFunName() {
        java.lang.Object ref = funName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          funName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string funName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFunNameBytes() {
        java.lang.Object ref = funName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          funName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string funName = 3;</code>
       */
      public Builder setFunName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        funName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string funName = 3;</code>
       */
      public Builder clearFunName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        funName_ = getDefaultInstance().getFunName();
        onChanged();
        return this;
      }
      /**
       * <code>required string funName = 3;</code>
       */
      public Builder setFunNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        funName_ = value;
        onChanged();
        return this;
      }

      // optional int64 reqTime = 4;
      private long reqTime_ ;
      /**
       * <code>optional int64 reqTime = 4;</code>
       */
      public boolean hasReqTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 reqTime = 4;</code>
       */
      public long getReqTime() {
        return reqTime_;
      }
      /**
       * <code>optional int64 reqTime = 4;</code>
       */
      public Builder setReqTime(long value) {
        bitField0_ |= 0x00000008;
        reqTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 reqTime = 4;</code>
       */
      public Builder clearReqTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        reqTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 rspTime = 5;
      private long rspTime_ ;
      /**
       * <code>optional int64 rspTime = 5;</code>
       */
      public boolean hasRspTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 rspTime = 5;</code>
       */
      public long getRspTime() {
        return rspTime_;
      }
      /**
       * <code>optional int64 rspTime = 5;</code>
       */
      public Builder setRspTime(long value) {
        bitField0_ |= 0x00000010;
        rspTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 rspTime = 5;</code>
       */
      public Builder clearRspTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rspTime_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 code = 6;
      private int code_ ;
      /**
       * <code>optional int32 code = 6;</code>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 code = 6;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>optional int32 code = 6;</code>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00000020;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 code = 6;</code>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        code_ = 0;
        onChanged();
        return this;
      }

      // optional bytes data = 7;
      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes data = 7;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes data = 7;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>optional bytes data = 7;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes data = 7;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000040);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.suomee.csp.lib.proto.CspResponse)
    }

    static {
      defaultInstance = new CspResponse(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.suomee.csp.lib.proto.CspResponse)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_suomee_csp_lib_proto_CspRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_suomee_csp_lib_proto_CspRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_suomee_csp_lib_proto_CspResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_suomee_csp_lib_proto_CspResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tcsp.proto\022\030com.suomee.csp.lib.proto\"n\n" +
      "\nCspRequest\022\020\n\005cspId\030\001 \002(\003:\0010\022\017\n\007srvName" +
      "\030\002 \002(\t\022\017\n\007funName\030\003 \002(\t\022\014\n\004time\030\004 \001(\003\022\020\n" +
      "\010timeouts\030\005 \001(\005\022\014\n\004data\030\006 \001(\014\"\177\n\013CspResp" +
      "onse\022\020\n\005cspId\030\001 \002(\003:\0010\022\017\n\007srvName\030\002 \002(\t\022" +
      "\017\n\007funName\030\003 \002(\t\022\017\n\007reqTime\030\004 \001(\003\022\017\n\007rsp" +
      "Time\030\005 \001(\003\022\014\n\004code\030\006 \001(\005\022\014\n\004data\030\007 \001(\014B\037" +
      "\n\030com.suomee.csp.lib.protoB\003Csp"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_suomee_csp_lib_proto_CspRequest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_suomee_csp_lib_proto_CspRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_suomee_csp_lib_proto_CspRequest_descriptor,
              new java.lang.String[] { "CspId", "SrvName", "FunName", "Time", "Timeouts", "Data", });
          internal_static_com_suomee_csp_lib_proto_CspResponse_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_suomee_csp_lib_proto_CspResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_suomee_csp_lib_proto_CspResponse_descriptor,
              new java.lang.String[] { "CspId", "SrvName", "FunName", "ReqTime", "RspTime", "Code", "Data", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
